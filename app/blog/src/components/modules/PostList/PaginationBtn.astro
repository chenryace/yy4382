---
import { Icon } from "astro-icon/components";
// https://github.com/saicaca/fuwari/raw/47c65cd551a313beef1b0e39d697c1759f264c5e/src/components/control/Pagination.astro
import type { Page } from "astro";
import Card from "@comp/ui/Card/Card.astro";

interface Props {
  page: Page;
  /**
   * The URL template for the pagination. {{pageNo}} will be replaced with the page number.
   *
   * @example "/post/{{pageNo}}"
   */
  urlTemplate: string;
  /**
   * Convert {{pageNo}} to "" (empty string) if it is 1.
   *
   * @default true
   */
  omitFirst?: boolean;
  class?: string;
  style?: string;
}

const { page, style, urlTemplate, omitFirst = true } = Astro.props;

const HIDDEN = -1;

const className = Astro.props.class;

const ADJ_DIST = 2;
const VISIBLE = ADJ_DIST * 2 + 1;

// for test
let count = 1;
let l = page.currentPage,
  r = page.currentPage;
while (0 < l - 1 && r + 1 <= page.lastPage && count + 2 <= VISIBLE) {
  count += 2;
  l--;
  r++;
}
while (0 < l - 1 && count < VISIBLE) {
  count++;
  l--;
}
while (r + 1 <= page.lastPage && count < VISIBLE) {
  count++;
  r++;
}

let pages: number[] = [];
if (l > 1) pages.push(1);
if (l == 3) pages.push(2);
if (l > 3) pages.push(HIDDEN);
for (let i = l; i <= r; i++) pages.push(i);
if (r < page.lastPage - 2) pages.push(HIDDEN);
if (r == page.lastPage - 2) pages.push(page.lastPage - 1);
if (r < page.lastPage) pages.push(page.lastPage);

const getPageUrl = (p: number) => {
  if (omitFirst && p == 1) return urlTemplate.replace("{{pageNo}}", "");
  return urlTemplate.replace("{{pageNo}}", p.toString());
};
---

<Card padding="sm">
  <div
    class:list={[className, "flex flex-row justify-center gap-3"]}
    style={style}
  >
    <a
      href={page.url.prev}
      aria-label={page.url.prev ? "Previous Page" : null}
      class:list={["button text-content"]}
    >
      <Icon
        name={page.url.prev === undefined
          ? "mingcute:forbid-circle-line"
          : "mingcute:arrows-left-line"}
        size={24}
      />
    </a>
    <div
      class="flex flex-row items-center gap-2 bg-none font-bold text-content"
    >
      {
        pages.map((p) => {
          if (p == HIDDEN)
            return <Icon name="mingcute:more-1-line" class="mx-1" />;
          if (p == page.currentPage)
            return (
              <div class="button !size-9 rounded-full bg-primary/20">{p}</div>
            );
          return (
            <a href={getPageUrl(p)} aria-label={`Page ${p}`} class="button">
              {p}
            </a>
          );
        })
      }
    </div>
    <a
      href={page.url.next}
      aria-label={page.url.next ? "Next Page" : null}
      class:list={["button"]}
    >
      <Icon
        name={page.url.next === undefined
          ? "mingcute:forbid-circle-line"
          : "mingcute:arrows-right-line"}
        size={24}
      />
    </a>
  </div>
</Card>

<style>
  @reference "../../../styles/base.css";
  .button {
    @apply flex size-12 items-center justify-center overflow-hidden;
  }
</style>
