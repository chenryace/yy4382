---
import MdRender from "@comp/elements/MdRender.astro";
import { cardContainer, cardInner, cardOuter } from "@comp/ui/Card/Card.astro";
import { type CollectionEntry } from "astro:content";
import Toc from "./toc/Toc";
import { Markdown } from "@comp/elements/Markdown";
import type { Root } from "hast";
interface Props {
  entry: CollectionEntry<"post"> | CollectionEntry<"page">;
}
const { entry } = Astro.props;
const { headings } = entry.data;
let hast: Root | null;
try {
  hast = JSON.parse(entry.data.hastString);
} catch (error) {
  console.error(error);
  hast = null;
}
---

<div class={cardOuter()}>
  <div class={cardContainer("relative")}>
    <div class="sticky top-0 z-50">
      <div class="flex justify-end">
        <Toc headings={headings} client:load />
      </div>
    </div>
    <div class={cardInner({ padding: "article" })}>
      <MdRender>
        {
          hast ? (
            <Markdown hast={hast} client:load />
          ) : (
            <div>Error rendering markdown</div>
          )
        }
      </MdRender>
    </div>
  </div>
</div>
