---
import { format, isSameDay } from "date-fns";
import { Icon } from "astro-icon/components";
import { type CollectionEntry } from "astro:content";
import { cn } from "@utils/cn";
interface Props {
  data:
    | Pick<CollectionEntry<"post">["data"], "date" | "updated" | "tags">
    | Pick<CollectionEntry<"page">["data"], "date" | "updated">;
  alignment: "left" | "center";
}
const { data, alignment } = Astro.props;

const baseClass = cn(
  "flex gap-2 text-[0.8rem] text-comment lg:gap-3",
  alignment === "left" && "flex-wrap",
  alignment === "center" && "flex-col md:flex-row items-center",
);
---

<div class={baseClass}>
  <div class="flex items-center gap-2 select-none lg:gap-3">
    <div class="flex items-center select-none">
      <Icon name="mingcute:calendar-line" class="mr-1 text-base" />
      {format(data.date, "yyyy-MM-dd")}
    </div>
    {
      data.updated && !isSameDay(data.date, data.updated) && (
        <div class="flex items-center select-none">
          <Icon name="mingcute:edit-line" class="mr-1 text-base" />
          {format(data.updated, "yyyy-MM-dd")}
        </div>
      )
    }
  </div>

  <!-- Tags -->
  {
    "tags" in data && data?.tags instanceof Array && (
      <div class="flex items-center select-none">
        <Icon name="mingcute:hashtag-line" class="mr-1 text-base" />
        <span class="space-x-0.5">
          {data.tags.map((tag, index) => (
            <>
              {index !== 0 && <span class="text-comment">|</span>}
              <a
                href={"/tags/" + tag}
                class="transition hover:text-content-primary"
              >
                {tag}
              </a>
            </>
          ))}
        </span>
      </div>
    )
  }
</div>
