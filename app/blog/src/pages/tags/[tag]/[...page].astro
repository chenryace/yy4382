---
import PostListLayout from "@layouts/PostListLayout.astro";
import { getSeo } from "@utils/SEO";
import type {
  GetStaticPaths,
  InferGetStaticParamsType,
  InferGetStaticPropsType,
} from "astro";
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";

export const getStaticPaths = (async ({ paginate }) => {
  const allPosts = await getCollection("post");

  const uniqueTags = allPosts.reduce(
    (acc, post) => {
      post.data.tags.forEach((tag) => {
        tag in acc ? acc[tag].push(post) : (acc[tag] = [post]);
      });
      return acc;
    },
    {} as Record<string, CollectionEntry<"post">[]>,
  );

  return Object.entries(uniqueTags).flatMap(([tag, posts]) => {
    return paginate(posts, { pageSize: 15, params: { tag } });
  });
}) satisfies GetStaticPaths;

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { page } = Astro.props;
const { tag } = Astro.params;
const seoConfig = getSeo({ title: `Tag: ${tag}`, noindex: true });
---

<PostListLayout
  seoConfig={seoConfig}
  page={page}
  title={`Tag: ${tag}`}
  paginationTemplate={`/tags/${tag}/{{pageNo}}`}
/>
